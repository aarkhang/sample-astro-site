---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import type { MarkdownInstance } from 'astro';

interface Frontmatter {
	title: string;
	tags: string[];
	description?: string;
}

type Post = MarkdownInstance<Frontmatter>;

export async function getStaticPaths() {
	const allPosts: Post[] = await Astro.glob<Frontmatter>('../posts/*.md');

	const uniqueTags: string[] = [
		...new Set(allPosts.map((post: Post) => post.frontmatter.tags).flat()),
	];

	return uniqueTags.map((tag: string) => {
		const filteredPosts: Post[] = allPosts.filter((post: Post) =>
			post.frontmatter.tags.includes(tag)
		);
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
	<p>Posts tagged with <em>{tag}</em></p>
	<ul>
		{posts.map((post: Post) => <BlogPost url={post.url} title={post.frontmatter.title} />)}
	</ul>
</BaseLayout>
